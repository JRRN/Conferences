{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "outputs": {
    "serviceBusConnectionString": {
      "type": "string",
      "value": "[listkeys(variables('outputServiceBus'), '2017-04-01').primaryConnectionString]"
    }
  },
  "parameters": {
    "hostingPlanName": {
      "type": "string",
      "minLength": 1
    },
    "storageAccountsName": {
      "defaultValue": "de0a100armsegstorage",
      "type": "String"
    },
    "skuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "administratorLogin": {
      "type": "string"
    },
    "administratorLoginPassword": {
      "type": "securestring"
    },
    "databaseName": {
      "type": "string"
    },
    "collation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "edition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic"
      ]
    },
    "maxSizeBytes": {
      "type": "string",
      "defaultValue": "1073741824"
    },
    "requestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "serviceBusName": {
      "defaultValue": "de0a100armsegundosservicebus",
      "type": "String"
    },
    "serviceBusQueueNames": {
      "type": "array",
      "defaultValue": [
        "queuerepository",
        "queuestorage"
      ]
    },
    "functionNames": {
      "type": "array",
      "defaultValue": [
        "repository",
        "storage"
      ]
    },
    "de0a100armsegundosstorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "de0a100armssegundosfunctionName": {
      "defaultValue": "de0a100armsegundosfunction",
      "type": "String"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[parameters('storageAccountsName')]",
      "location": "West Europe",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "name": "[variables('sqlserverName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "SqlServer"
      },
      "apiVersion": "2014-04-01-preview",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
      },
      "resources": [
        {
          "name": "[parameters('databaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "Database"
          },
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))]"
          ],
          "properties": {
            "edition": "[parameters('edition')]",
            "collation": "[parameters('collation')]",
            "maxSizeBytes": "[parameters('maxSizeBytes')]",
            "requestedServiceObjectiveName": "[parameters('requestedServiceObjectiveName')]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('serviceBusName')]",
      "location": "West Europe",
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "properties": {
        "provisioningState": "Succeeded",
        "metricId": "[concat('53889492-cf90-4086-a218-b27ef9ad8caa:', parameters('serviceBusName'))]",
        "createdAt": "2019-04-03T12:44:37.68Z",
        "updatedAt": "2019-04-03T12:45:10.25Z",
        "serviceBusEndpoint": "[concat('https://', parameters('serviceBusName'), '.servicebus.windows.net:443/')]",
        "status": "Active"
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('ServiceBusName'),'/', parameters('ServiceBusQueueNames')[copyIndex()])]",
      "location": "West Europe",
      "copy": {
        "name": "queueLoop",
        "count": "[length(parameters('ServiceBusQueueNames'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBusName'))]"
      ],
      "properties": {
        "deadLetteringOnMessageExpiration": true,
        "defaultMessageTimeToLive": "P14D",
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "enableBatchedOperations": true,
        "enableExpress": false,
        "enablePartitioning": true,
        "lockDuration": "PT30S",
        "maxDeliveryCount": 10,
        "maxSizeInMegabytes": 1024,
        "requiresDuplicateDetection": false,
        "requiresSession": false,
        "status": "Active"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "empty",
        "displayName": "Website"
      },
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "type": "config",
          "name": "connectionstrings",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/', variables('webSiteName'))]",
            "[resourceId('Microsoft.ServiceBus/namespaces/',variables('ServiceBusName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountsName'))]"
          ],
          "properties": {
            "DefaultConnection": {
              "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('administratorLogin'), '@', variables('sqlserverName'), ';Password=', parameters('administratorLoginPassword'), ';')]",
              "type": "SQLServer"
            },
            "ServiceBusConnection": {
              "value": "[concat('', listkeys(variables('outputServiceBus'), '2017-04-01').primaryConnectionString)]",
              "type": "Custom"
            },
            "StorageConnection": {
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountsName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountsName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
              "type": "Custom"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Insights/components",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/', variables('webSiteName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "ApplicationId": "[variables('webSiteName')]"
      }
    },
    {
      "apiVersion": "2016-03-01",
      "type": "Microsoft.Web/sites",
      "name": "[concat(parameters('de0a100armssegundosfunctionName'),parameters('functionNames')[copyIndex()])]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "copy": {
        "name": "functionLoop",
        "count": "[length(parameters('functionNames'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountsName'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/',variables('ServiceBusName'))]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountsName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountsName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountsName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountsName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('de0a100armssegundosfunctionName'))]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "10.14.1"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('webSiteName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "ServiceBusConnection",
              "value": "[concat('', listkeys(variables('outputServiceBus'), '2017-04-01').primaryConnectionString)]"
            },
            {
              "name": "Values:ConnectionStrings:StorageConnection",
              "value": "[if(equals(parameters('functionNames')[copyIndex()], 'Storage'),concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountsName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountsName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value),'')]"
            },
            {
              "name": "BindingRedirects",
              "value": "{ \"ShortName\": \"Newtonsoft.Json\", \"RedirectToVersion\": \"11.0.0.0\", \"PublicKeyToken\": \"30ad4fe6b2a6aeed\" }"
            },
            {
              "name": "Values:ConnectionStrings:DefaultConnection",
              "value": "[if(equals(parameters('functionNames')[copyIndex()], 'Repository'),concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('administratorLogin'), '@', variables('sqlserverName'), ';Password=', parameters('administratorLoginPassword'), ';'),'')]"
            }
          ]
        }
      }
    }
  ],
  "variables": {
    "webSiteName": "de0a100armsegundosapi",
    "sqlserverName": "de0a100armsegundossqlserver",
    "servicebusName": "de0a100armsegundosservicebus",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "outputServiceBus": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('servicebusName'), variables('defaultSASKeyName'))]",
    "de0a100armsegundosstorageName": "[concat('de0a100armsegundosstorage', uniqueString(resourceGroup().id))]"
  }
}